
generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


//enums
enum PlanType {
  FREE 
  BASIC 
  PREMIUM 
}

//models 
model User {
  id String @id @default(cuid())
  email String @unique 
  name String?
  role String @default("user")

  stripeCustomerId String? @unique
  subscriptionStatus String? 
  currentPeriodEnd DateTime?

  plan PlanType @default(FREE)

  tasks Task[]
  subscriptions Subscription[]
  
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Task {
  id String @id @default(cuid())
  title String 
  description String?
  dueDate DateTime?
  completed Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  userId String 
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Plan{
  id String @id @default(cuid())
  name String 
  stripePriceId String? @unique//from stripe dashboard 
  stripeProductId String? @unique 
  amount Int @default(0)
  currency String @default("usd")
  interval String @default("month")
  features String[]

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  subscriptions Subscription[]
}

model Subscription{
  id String @id @default(cuid())
  stripeSubId String? @unique
  status String 
  currentPeriodStart DateTime?
  currentPeriodEnd DateTime?
  cancelAtPeriodEnd Boolean @default(false)

  planId String?
  userId String 
  planType PlanType @default(FREE)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  plan Plan? @relation(fields: [planId], references: [id], onDelete: Cascade)
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}